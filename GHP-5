#include <stdio.h>
#include <math.h>

void product(int, float[], float[], float[]);
void sumRoot(int, float[]);
void small(int, float[]);

int main(void)
{

        float x[20], y[20], z[20];
        int n = 0, i = 0;


        while(x[n] != -1 && n < 20)
        {

                printf("\n\nPlease enter a number(-1 to stop): ");
                scanf("%f", &x[n]);

                if(x[n] != -1)
                {
                        n++;
                }
        }
        y[n] = -1;

        while(i < n)
        {
                printf("\nPlease enter a number: ");
                scanf("%f", &y[i]);

                if(y[i] == -1)
                {
                        printf("\nPlease enter a valid number after the prompt.");
                }
                else
                {
                        i++;
                }
        }



        product(n, x, y, z);

        sumRoot(n, z);

        small(n, z);

        return(0);
}


void product(int n, float x_temp[20], float y_temp[20], float z_temp[20])
{
        int i = 0;

        for(i = 0; i < n; i++)
        {
                z_temp[i] = (x_temp[i] * y_temp[i]);
        }

        printf("\n\n");

        for(i = 0; i < n; i++)
        {
                printf("\n%.3f\t%.3f\t%.3f\n", x_temp[i], y_temp[i], z_temp[i]);

        }

        return;
}

void sumRoot(int n, float z_temp[20])
{
        float sum = 0, root = 0;
        int i = 0;

        for(i = 0; i < n; i++)
        {
                sum += z_temp[i];
        }

        root = sqrt(sum);

        printf("\n\nThe sum is: %f", sum);
        printf("\nThe root is: %f\n", root);

        return;
}

void small(int n, float z_temp[20])

{
        int i = 0, index = 0;
        float smallest = z_temp[0];

        for(i = 0; i < n; i++)
        {
                if(z_temp[i] < smallest)
                {
                        smallest = z_temp[i];
                        index = i;
                }
        }

        printf("\n\nThe Smallest number is: %f\n", smallest);
        printf("\nThe index is: %d\n\n", index);

        return;
}


